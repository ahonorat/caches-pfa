%declare struct node;
%declare struct line;


%start Init::Start
%class coherence
%header coherence.h

%map Init
%%
// State    Transition  End State       Action(s)
Start
{
            MSI        jump(MSI::I)     {}
            MESI       jump(MESI::I)    {}
            MOSI       jump(MOSI::I)    {}
            MOESI      jump(MOESI::I)   {}
            MESIF      jump(MESIF::I)   {}
}
%%

%map MSI
%%
// State    Transition  End State       Action(s)

I
{
	i_modify(n: struct node*, i: unsigned long, l: struct line*)       M       {modify_line(l); up_stat(n,i,COHERENCE_BROADCAST);}
	i_read(n: struct node*, i: unsigned long, l: struct line*)         S       {share_line(l); up_stat(n,i,COHERENCE_BROADCAST);}           
}

M
{
	a_read(n: struct node*, i: unsigned long, l: struct line*)        S       {share_line(l);up_stat(n,i,WRITE_BACK);}
	i_del(n: struct node*, i: unsigned long, l: struct line*)         I       {invalid_line(l);up_stat(n,i,WRITE_BACK);}     
	a_modify(n: struct node*, i: unsigned long, l: struct line*)      I       {invalid_line(l);up_stat(n,i,WRITE_BACK);up_stat(n,i,COHERENCE_EVINCTION);}
}

S
{
	i_modify(n: struct node*, i: unsigned long, l: struct line*)      M        {modify_line(l);up_stat(n,i,COHERENCE_BROADCAST);}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)      I       {invalid_line(l);up_stat(n,i,COHERENCE_EVINCTION);}
	i_del(n: struct node*, i: unsigned long, l: struct line*)         I       {invalid_line(l);}                 
}


Default
{
	i_read(n: struct node*, i: unsigned long, l: struct line*)     nil    {}
	i_modify(n: struct node*, i: unsigned long, l: struct line*)   nil    {}
	i_del(n: struct node*, i: unsigned long, l: struct line*)      nil     {}
	a_read(n: struct node*, i: unsigned long, l: struct line*)     nil    {}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)   nil    {}
	a_del(n: struct node*, i: unsigned long, l: struct line*)      nil     {}

}
%%

%map MESI
%%
// State    Transition  End State       Action(s)

I
{
	i_read(n: struct node*, i: unsigned long, l: struct line*)   [is_in_level(n,i,I) != 0]     S       {share_line(l);up_stat(n,i,COHERENCE_BROADCAST);}                  
	i_read(n: struct node*, i: unsigned long, l: struct line*)   [is_in_level(n,i,I) == 0]    E       {exclusive_line(l);up_stat(n,i,COHERENCE_BROADCAST);}                  
	i_modify(n: struct node*, i: unsigned long, l: struct line*)    			    	      M       {modify_line(l);up_stat(n,i,COHERENCE_BROADCAST);}                  	
}

M
{
	a_read(n: struct node*, i: unsigned long, l: struct line*)      S       {share_line(l);up_stat(n,i,WRITE_BACK);}                  
	i_del(n: struct node*, i: unsigned long, l: struct line*)       I       {invalid_line(l);up_stat(n,i,WRITE_BACK);}                  
	a_modify(n: struct node*, i: unsigned long, l: struct line*)    I       {invalid_line(l);up_stat(n,i,WRITE_BACK);up_stat(n,i,COHERENCE_EVINCTION);}                  	
}

S
{
	i_modify(n: struct node*, i: unsigned long, l: struct line*)       M       {modify_line(l);up_stat(n,i,COHERENCE_BROADCAST);}     
	i_del(n: struct node*, i: unsigned long, l: struct line*)          I       {invalid_line(l);}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)       I       {invalid_line(l);up_stat(n,i,COHERENCE_EVINCTION);}
}

E
{
	a_read(n: struct node*, i: unsigned long, l: struct line*)         S       {share_line(l);}
	i_modify(n: struct node*, i: unsigned long, l: struct line*)       M       {modify_line(l);}                  
	i_del(n: struct node*, i: unsigned long, l: struct line*)          I       {invalid_line(l);}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)       I       {invalid_line(l);up_stat(n,i,COHERENCE_EVINCTION);}
}


Default
{
	i_read(n: struct node*, i: unsigned long, l: struct line*)     nil    {}
	i_modify(n: struct node*, i: unsigned long, l: struct line*)   nil    {}
	i_del(n: struct node*, i: unsigned long, l: struct line*)      nil     {}
	a_read(n: struct node*, i: unsigned long, l: struct line*)     nil    {}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)   nil    {}
	a_del(n: struct node*, i: unsigned long, l: struct line*)      nil     {}

}
%%


%map MOSI
%%
// State    Transition  End State       Action(s)

I
{
	i_read(n: struct node*, i: unsigned long, l: struct line*)   [is_in_level(n,i,I) != 0]     S       {share_line(l);}                  
	i_read(n: struct node*, i: unsigned long, l: struct line*)   [is_in_level(n,i,I) == 0]    O       {owned_line(l);}                  
	i_modify(n: struct node*, i: unsigned long, l: struct line*)    			    	      M       {modify_line(l);}                  	
}

M
{
	a_read(n: struct node*, i: unsigned long, l: struct line*)      S       {share_line(l);}                  
	i_del(n: struct node*, i: unsigned long, l: struct line*)       I       {invalid_line(l);}                  
	a_modify(n: struct node*, i: unsigned long, l: struct line*)    I       {invalid_line(l);}                  	
}

S
{
	i_modify(n: struct node*, i: unsigned long, l: struct line*)       M       {modify_line(l);}                  
	i_del(n: struct node*, i: unsigned long, l: struct line*)          I       {invalid_line(l);}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)       I       {invalid_line(l);}
}

O
{
	i_modify(n: struct node*, i: unsigned long, l: struct line*)       M       {modify_line(l);}                  
	i_del(n: struct node*, i: unsigned long, l: struct line*)          I       {invalid_line(l);}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)       I       {invalid_line(l);}
}


Default
{
	i_read(n: struct node*, i: unsigned long, l: struct line*)     nil    {}
	i_modify(n: struct node*, i: unsigned long, l: struct line*)   nil    {}
	i_del(n: struct node*, i: unsigned long, l: struct line*)      nil     {}
	a_read(n: struct node*, i: unsigned long, l: struct line*)     nil    {}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)   nil    {}
	a_del(n: struct node*, i: unsigned long, l: struct line*)      nil     {}

}
%%


%map MOESI
%%
// State    Transition  End State       Action(s)

I
{
	i_read(n: struct node*, i: unsigned long, l: struct line*)   [is_in_level(n,i,I) != 0]     S       {share_line(l);}                  
	i_read(n: struct node*, i: unsigned long, l: struct line*)   [is_in_level(n,i,I) == 0]    E       {exclusive_line(l);}                  
	i_modify(n: struct node*, i: unsigned long, l: struct line*) [is_in_level(n,i,I) != 0]     O       {owned_line(l);dirty_line(l, 1);} 
	i_modify(n: struct node*, i: unsigned long, l: struct line*) [is_in_level(n,i,I) == 0]     M       {modify_line(l);}
}

M
{
	a_read(n: struct node*, i: unsigned long, l: struct line*)      O       {owned_line(l);}                  
	i_del(n: struct node*, i: unsigned long, l: struct line*)       I       {invalid_line(l);}                  
	a_modify(n: struct node*, i: unsigned long, l: struct line*)    S       {share_line(l);}                  	
}

S
{
	i_modify(n: struct node*, i: unsigned long, l: struct line*)  [is_in_level(n,i,I) != 0]     O       {owned_line(l);dirty_line(l, 1);}  
	a_del(n: struct node*, i: unsigned long, l: struct line*)  [is_in_level(n,i,I) != 0 && is_dirty(l) == 1 && is_in_level(n,i,O) == 0]     O       {owned_line(l);}
	i_modify(n: struct node*, i: unsigned long, l: struct line*)     [is_in_level(n,i,I) == 0]     M       {modify_line(l);}
	a_del(n: struct node*, i: unsigned long, l: struct line*)    [is_in_level(n,i,I) == 0 && is_dirty(l) == 1]   M       {modify_line(l);}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)          nil        {dirty_line(l, 1);}
}

E
{
	a_read(n: struct node*, i: unsigned long, l: struct line*)         S       {share_line(l);}
	i_modify(n: struct node*, i: unsigned long, l: struct line*)       M       {modify_line(l);}                  
	i_del(n: struct node*, i: unsigned long, l: struct line*)          I       {invalid_line(l);}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)       S       {share_line(l);dirty_line(l, 1);}
}

O
{                 
	i_del(n: struct node*, i: unsigned long, l: struct line*)          I       {invalid_line(l);}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)       S       {share_line(l);}
	a_del(n: struct node*, i: unsigned long, l: struct line*) [is_in_level(n,i,I) == 0]   M    {modify_line(l);}
}


Default
{
	i_read(n: struct node*, i: unsigned long, l: struct line*)     nil    {}
	i_modify(n: struct node*, i: unsigned long, l: struct line*)   nil    {}
	i_del(n: struct node*, i: unsigned long, l: struct line*)      nil     {}
	a_read(n: struct node*, i: unsigned long, l: struct line*)     nil    {}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)   nil    {}
	a_del(n: struct node*, i: unsigned long, l: struct line*)      nil     {}

}
%%

%map MESIF
%%
// State    Transition  End State       Action(s)

I
{
	i_read(n: struct node*, i: unsigned long, l: struct line*)   [is_in_level(n,i,E) != 0 || is_in_level(n,i,M) != 0]     F       {forward_line(l);}                  
	i_read(n: struct node*, i: unsigned long, l: struct line*)   [is_in_level(n,i,F) != 0]    S       {share_line(l);}                  
	i_modify(n: struct node*, i: unsigned long, l: struct line*)    			    	      M       {modify_line(l);}
        i_read(n: struct node*, i: unsigned long, l: struct line*)   [is_in_level(n,i,I) == 0]    E       {exclusive_line(l);}              	
}

M
{
	a_read(n: struct node*, i: unsigned long, l: struct line*)      S       {share_line(l);}                  
	i_del(n: struct node*, i: unsigned long, l: struct line*)       I       {invalid_line(l);}                  
	a_modify(n: struct node*, i: unsigned long, l: struct line*)    I       {invalid_line(l);}                  	
}

S
{
	i_modify(n: struct node*, i: unsigned long, l: struct line*)     M       {modify_line(l);}
	i_del(n: struct node*, i: unsigned long, l: struct line*)        I       {invalid_line(l);}                  
	a_del(n: struct node*, i: unsigned long, l: struct line*)  [is_in_level(n,i,S) != 0 && is_in_level(n,i,F) == 0]     F       {forward_line(l);}
}

E
{
	a_read(n: struct node*, i: unsigned long, l: struct line*)         S       {share_line(l);}
	i_modify(n: struct node*, i: unsigned long, l: struct line*)       M       {modify_line(l);}                  
	i_del(n: struct node*, i: unsigned long, l: struct line*)          I       {invalid_line(l);}             
	a_modify(n: struct node*, i: unsigned long, l: struct line*)       I       {invalid_line(l);}
}

F
{
	a_del(n: struct node*, i: unsigned long, l: struct line*)   [is_in_level(n,i,I) == 0]      E       {exclusive_line(l);} //utile ? autant la laisser en F
	i_modify(n: struct node*, i: unsigned long, l: struct line*)       M       {modify_line(l);}                  
	i_del(n: struct node*, i: unsigned long, l: struct line*)          I       {invalid_line(l);}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)       I       {invalid_line(l);}              
}


Default
{
	i_read(n: struct node*, i: unsigned long, l: struct line*)     nil    {}
	i_modify(n: struct node*, i: unsigned long, l: struct line*)   nil    {}
	i_del(n: struct node*, i: unsigned long, l: struct line*)      nil     {}
	a_read(n: struct node*, i: unsigned long, l: struct line*)     nil    {}
	a_modify(n: struct node*, i: unsigned long, l: struct line*)   nil    {}
	a_del(n: struct node*, i: unsigned long, l: struct line*)      nil     {}

}
%%
