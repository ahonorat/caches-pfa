cmake_minimum_required(VERSION 2.8)

project(caches-pfa)
set(EXECUTABLE_OUTPUT_PATH bin)

find_package(LibXml2 REQUIRED)
find_package(LibXslt REQUIRED)
find_package(Lua51)

set(test_main_file src/main_test.c)

option(TEST "Build tests" ON)
option(AUTOMATE "Build with smc diagram" ON)
if(AUTOMATE)
	set(main_file src/main_automate.c)
	set(executable_name simulator)
	execute_process(
		COMMAND java -jar bin/Smc.jar -c coherence.sm
		WORKING_DIRECTORY src/gen-automate)
	file(GLOB source_files src/core-automate/*.c src/gen-automate/*.c)	
	include_directories (src/includes-automate src/gen-automate)

	if(TEST)
		file(GLOB automate_test_source_files src/tests-automate/*.c src/core-automate/*.c src/gen-automate/*.c)
		add_executable(
			automate_test
			${test_main_file} ${automate_test_source_files}
		)
		target_link_libraries(automate_test ${LIBXML2_LIBRARIES} ${LIBXSLT_LIBRARIES})
	endif(TEST)
else()
	set(main_file src/main.c)
	set(executable_name simulator_nosmc)
	file(GLOB source_files src/core/*.c)
	include_directories (src/includes)

	if(TEST)
		file(GLOB test_source_files src/tests/*.c src/core/*.c)
		add_executable(
			test
			${test_main_file} ${test_source_files}
		)
		target_link_libraries(test ${LIBXML2_LIBRARIES} ${LIBXSLT_LIBRARIES})
	endif(TEST)
endif(AUTOMATE)

include_directories (AFTER ${LIBXML2_INCLUDE_DIR} ${LIBXSLT_INCLUDE_DIR})

add_executable(
	${executable_name}
	${main_file} ${source_files}
)

target_link_libraries(${executable_name} ${LIBXML2_LIBRARIES} ${LIBXSLT_LIBRARIES} lua5.2 lua)


#~ Documentation
find_package (Doxygen)
if (DOXYGEN_FOUND)
	set (doxygenConfigFile "${CMAKE_CURRENT_SOURCE_DIR}/documentation/doxygen.conf")
	add_custom_target (
		doc
		${DOXYGEN_EXECUTABLE} ${doxygenConfigFile}
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/documentation	VERBATIM
	)
endif(DOXYGEN_FOUND)


